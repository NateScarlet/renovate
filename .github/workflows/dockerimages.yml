name: Docker Images CI

on:
  push:
    branches:
      - 'renovate/**'
      - feat/gh-release

  pull_request:

env:
  PLATFORM: linux/amd64
  DOCKER_CACHE_TAG: _cache
  DOCKER_REPO: renovate/renovate
  CACHE_VERSION: v1

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    timeout-minutes: 30

    strategy:
      matrix:
        tag: [renovate, renovate-slim]

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - uses: actions/checkout@v2

      - run: docker buildx ls

      - name: Cache docker layer
        id: docker_cache
        uses: actions/cache@v1
        with:
          path: tmp/docker
          key: docker_cache-${{ env.CACHE_VERSION }}-${{ matrix.tag }}-${{ hashFiles('Dockerfile*') }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            docker_cache-${{ env.CACHE_VERSION }}-${{ matrix.tag }}-

      - name: Prepare docker cache
        if: steps.docker_cache.outputs.cache-hit != 'true'
        run: |
          [[ ! -f tmp/docker/index.json ]] && docker buildx bake -f docker/buildx.hcl base

      - name: Build the Docker images
        run: |
          docker buildx bake -f docker/buildx.hcl --set cache.output=type=docker --set cache.tags=${{ matrix.tag }}

      - name: Test the Docker image
        run: |
          docker run --rm -t ${{ matrix.tag }} --version

      - name: Image history
        run: docker history ${{ matrix.tag }}
      - name: Image size
        run: docker image ls | grep ${{ matrix.tag }}
